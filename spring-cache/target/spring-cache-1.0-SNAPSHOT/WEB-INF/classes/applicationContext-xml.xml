<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- the service we want to make cacheable -->
    <bean id="bookService" class="com.ariclee.cache.xml.XmlBookService"/>

    <!-- cache definitions -->
    <cache:advice id="cacheAdvice" cache-manager="cacheManager" >
        <cache:caching cache="books">
            <cache:cacheable method="findBook" key="#id"/>

            <!-- 不缓存结果集中带有 default 的 -->
            <cache:cacheable method="findBookByName" unless="#result.name.contains('default')" key="#name"/>

            <!-- 只缓存参数名中包含 Java 的 -->
            <!--<cache:cacheable method="findBookByName"  condition="#name.contains('Java')" key="#name"/>-->

            <cache:cache-evict method="loadBooks" all-entries="true"/>
            <cache:cache-put method="saveBook" key="#id"/>
        </cache:caching>
    </cache:advice>

    <aop:config>
        <aop:advisor advice-ref="cacheAdvice" pointcut="execution(* com.ariclee.cache.xml.XmlBookService.*(..))"/>
    </aop:config>

    <!-- 注册缓存管理 -->
    <!--<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">-->
        <!--<property name="caches">-->
            <!--<set>-->
                <!--<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default"/>-->
                <!--<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="books"/>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="172.17.1.32"/>
        <property name="port" value="6379"/>
        <property name="password" value="2940184"/>
        <property name="timeout" value="2000"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
    </bean>

    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg ref="redisTemplate" />
        <constructor-arg value="books" />
    </bean>

    <mvc:annotation-driven/>

    <context:component-scan base-package="com.ariclee.cache.xml" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

</beans>